######################################################################
# Usage of this software requires acceptance of the SMASH-CMU License,
# which can be found at the following URL:
#
# https://code.google.com/p/smash-cmu/wiki/License
######################################################################

This folder contains the code to simulate drones using the actual code
they will have and and plugins to simulate parts of it in V-Rep. The projects are:

 - Initial Setup

	1) V-REP 
	V-REP has to be installed in order to be able to use the plugins. 
	* V-REP can be obtained from http://www.v-rep.eu/downloads.html. 
	* Set the environment variable VREP_HOME to the root directory of your V-REP installation 
	(where the V-REP executable that starts the simulator is housed). This directory will be 
	where all build	processes copy plugins to.

	2) MADARA
	All components use Madara to communicate with each other. The installers for Madara can be used
	to set it up. They can be obtained form https://code.google.com/p/madara/downloads/list
	
	2) MWC and MPC (ACE)
	The projects used for building the simulation components are generated by MPC (MWC). MPC is 
	included in ACE. ACE can be obtained from http://download.dre.vanderbilt.edu/ It is enough 
	to download the ACE-only Latest Release (such as ACE-6.2.0.zip), and decompress it to a 
	particular folder in the system. ACE's bin subfolder has to be added the system's PATH variable.
	
	For MPC to work, Perl also has to be installed in the computer. For Windows, ActivePerl can be used 	
	for Perl execution (http://www.activestate.com/activeperl) .	

	Once Perl and ACE are setup, the following scripts can generate the projects:\
		- Visual Studio 2010: generate_vs2010.bat
		- G++ Makefile		: generate_make.sh

 - DroneControllerSimulator
 
     This program acts as a simulated drone, containing all current code and logic for the drones
     except for the hardware layer. Instead of the actual hardware layer, it uses a V-Rep layer
     which gets information from the "sensors" (location) from V-Rep, and sends movement commands
     to V-Rep to, to move the simulated drones on a V-Rep scene. It uses the actual algorithms
     for Area Coverage and Bridge building that will be included on the drone. Since there is 
     an interface for the hardware layer, the use of V-Rep instead is (almost) transparent. 
     This is supposed to be used with the V-RepMadaraQuadcopterPlatformPlugin installed in the V-Rep main 
     executable folder, as they communicate with each other through Madara. It is assumed that a 
     V-Rep scene will act as the System Controller, as well as the sensors and actuators for each drone.
     
     The communication with V-Rep could be done through TCP or other methods, but it is actually
     handled through Madara as well, using some particular prefixes to get sensor information
     or send movement commands to V-Rep through Madara.
 
     Most of the code is actually located in the DroneController/packages/madara_client 
     folder or the repository, and is only referenced from this project.     
     The project itself only compiles the code in that folder including only the V-REP platform code.
     
     To execute, add the "-i" option, followed by an integer number starting from 0. 
     This indicates the id that this pseudo-drone will have. Running this in multiple
     consoles with different ids allows to simluate multiple pseudo-drones.
    
 - V-RepMadaraSystemControllerPlugin

    A plugin that acts as the Controller of the network, as well as receiving commands to move the drones to certain locations. 
    This is done through Madara to communicate with simulated pseudo-drones running with the DroneControllerSimulator 
    project described above. It defines several Lua functions that can be used by a simulation to setup 
    and cleanup the Madara interface, as well as send and receive the state of different variables in the Knowledge Base, 
    including area coverage and bridge requests, and functions to handle sensor and movement requests from the drones.
    

 - V-RepMadaraQuadcopterPlatformPlugin

    This plugin allows quadrotors in VREP to respond to go to commands issued from a simulated drone, as well
	as reporting information back to them. This is done through a Madara knowledge base.
